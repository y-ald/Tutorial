[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(addDefaultCommands), None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(addDefaultCommands, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(initialize), None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(initialize, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(boot, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(writeSbtVersion, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(reload, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(onFailure loadFailed, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadp, None, None)[0m[0J
[0m[[0m[0minfo[0m] [0m[0mwelcome to sbt 1.4.2 (Azul Systems, Inc. Java 1.8.0_252)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: plugins took 285.523189ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: defsScala took 0.627197ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /home/yald/.sbt/1.0/plugins[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/yald/.sbt/1.0/plugins, returning: ()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 47.155105 ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.resolveProject(global-plugins) took 2949.143934ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/yald/.sbt/1.0/plugins, plugins: List(<none>))) took 3075.694495ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/yald/.sbt/1.0/plugins, returning: (global-plugins)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: loadedProjectsRaw took 3425.334344ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: cleanEvalClasses took 0.353448ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit(file:/home/yald/.sbt/1.0/plugins/, ...) took 3725.267236ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: load took 4005.795664ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: resolveProjects took 8.227334ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: finalTransforms took 108.661716ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: config.delegates took 14.880531ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: Def.make(settings)... took 891.637278ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: structureIndex took 188.973141ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: mkStreams took 2.643808ms[0m[0J
[0m[[0m[0minfo[0m] [0m[0mloading global plugins from /home/yald/.sbt/1.0/plugins[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.defaultLoad until apply took 9261.315988ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: plugins took 21.656213ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: defsScala took 0.004946ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /home/yald/Documents/Training/Spark_Structured_Streaming/project[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/yald/Documents/Training/Spark_Structured_Streaming/project, returning: ()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 2.234255 ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m              Load.resolveProject(spark_structured_streaming-build) took 2.411606ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadTransitive: finalizeProject(Project(id spark_structured_streaming-build, base: /home/yald/Documents/Training/Spark_Structured_Streaming/project, plugins: List(<none>))) took 5.25699ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/yald/Documents/Training/Spark_Structured_Streaming/project, returning: (spark_structured_streaming-build)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: loadedProjectsRaw took 7.233108ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: cleanEvalClasses took 0.015652ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadUnit(file:/home/yald/Documents/Training/Spark_Structured_Streaming/project/, ...) took 29.619866ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: load took 31.211752ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: resolveProjects took 0.152185ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: finalTransforms took 12.349069ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: config.delegates took 0.48023ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: Def.make(settings)... took 195.414377ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: structureIndex took 64.734385ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: mkStreams took 0.003312ms[0m[0J
[0m[[0m[0minfo[0m] [0m[0mloading project definition from /home/yald/Documents/Training/Spark_Structured_Streaming/project[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: plugins took 694.560449ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: defsScala took 0.009822ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /home/yald/Documents/Training/Spark_Structured_Streaming[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: mkEval took 22.37587ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/yald/Documents/Training/Spark_Structured_Streaming, returning: ()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 6.56571 ms[0m[0J
[0m[[0m[0minfo[0m] [0m[0mloading settings for project spark_structured_streaming from build.sbt ...[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m        Load.resolveProject(spark_structured_streaming) took 5.022248ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadTransitive: finalizeProject(Project(id spark_structured_streaming, base: /home/yald/Documents/Training/Spark_Structured_Streaming, plugins: List(<none>))) took 16.299678ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/yald/Documents/Training/Spark_Structured_Streaming, returning: (spark_structured_streaming)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: loadedProjectsRaw took 289.842758ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: cleanEvalClasses took 7.411997ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.loadUnit(file:/home/yald/Documents/Training/Spark_Structured_Streaming/, ...) took 996.663707ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: load took 1000.147027ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: resolveProjects took 0.17923ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: finalTransforms took 25.719323ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: config.delegates took 1.501989ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: Def.make(settings)... took 189.015119ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: structureIndex took 61.058907ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: mkStreams took 0.004858ms[0m[0J
[0m[[0m[0minfo[0m] [0m[0mset current project to Spark_Structured_Streaming (in build file:/home/yald/Documents/Training/Spark_Structured_Streaming/)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtPopOnFailure, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(notifyUsersAboutShell, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(iflast shell, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(run, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / run[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m[0J
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /home/yald/Documents/Training/Spark_Structured_Streaming/target/scala-2.12/classes ...[0m[0J
