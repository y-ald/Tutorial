[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(addDefaultCommands), None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(addDefaultCommands, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(initialize), None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(initialize, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(addPluginSbtFile="""/tmp/idea.sbt"""), None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(addPluginSbtFile="""/tmp/idea.sbt""", None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(boot, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(writeSbtVersion, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(reload, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(onFailure loadFailed, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadp, None, None)[0m[0J
[0m[[0m[0minfo[0m] [0m[0mwelcome to sbt 1.4.1 (Azul Systems, Inc. Java 1.8.0_252)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: plugins took 137.06228ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: defsScala took 0.659022ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /home/yald/.sbt/1.0/plugins[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/yald/.sbt/1.0/plugins, returning: ()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 43.817933 ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.resolveProject(global-plugins) took 88.086451ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/yald/.sbt/1.0/plugins, plugins: List(<none>))) took 194.863739ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/yald/.sbt/1.0/plugins, returning: (global-plugins)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: loadedProjectsRaw took 422.895445ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: cleanEvalClasses took 0.396348ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit(file:/home/yald/.sbt/1.0/plugins/, ...) took 574.356253ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: load took 894.801857ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: resolveProjects took 12.468037ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: finalTransforms took 102.739379ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: config.delegates took 13.763948ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: Def.make(settings)... took 841.736555ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: structureIndex took 162.027177ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: mkStreams took 2.54602ms[0m[0J
[0m[[0m[0minfo[0m] [0m[0mloading global plugins from /home/yald/.sbt/1.0/plugins[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.defaultLoad until apply took 4901.483515ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: plugins took 21.400078ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: defsScala took 0.006994ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /home/yald/Documents/Training/Tutorial/spark_streaming/project[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadUnit: mkEval took 11.163022ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/yald/Documents/Training/Tutorial/spark_streaming/project, returning: ()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 2.743279 ms[0m[0J
[0m[[0m[0minfo[0m] [0m[0mloading settings for project spark_streaming-build from idea.sbt ...[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m              Load.resolveProject(spark_streaming-build) took 6.112297ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadTransitive: finalizeProject(Project(id spark_streaming-build, base: /home/yald/Documents/Training/Tutorial/spark_streaming/project, plugins: List(<none>))) took 9.634351ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/yald/Documents/Training/Tutorial/spark_streaming/project, returning: (spark_streaming-build)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: loadedProjectsRaw took 222.016838ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: cleanEvalClasses took 5.201151ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadUnit(file:/home/yald/Documents/Training/Tutorial/spark_streaming/project/, ...) took 249.502342ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: load took 251.428475ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: resolveProjects took 0.173418ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: finalTransforms took 14.279284ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: config.delegates took 0.572411ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: Def.make(settings)... took 174.306069ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: structureIndex took 64.929625ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: mkStreams took 0.004196ms[0m[0J
[0m[[0m[0minfo[0m] [0m[0mloading project definition from /home/yald/Documents/Training/Tutorial/spark_streaming/project[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: plugins took 5926.692448ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: defsScala took 0.006363ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /home/yald/Documents/Training/Tutorial/spark_streaming[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: mkEval took 0.807612ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/yald/Documents/Training/Tutorial/spark_streaming, returning: ()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 2.916084 ms[0m[0J
[0m[[0m[0minfo[0m] [0m[0mloading settings for project spark_streaming from build.sbt ...[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m        Load.resolveProject(spark_streaming) took 60.138157ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadTransitive: finalizeProject(Project(id spark_streaming, base: /home/yald/Documents/Training/Tutorial/spark_streaming, plugins: List(<none>))) took 65.210227ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/yald/Documents/Training/Tutorial/spark_streaming, returning: (spark_streaming)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: loadedProjectsRaw took 7959.053157ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: cleanEvalClasses took 17.140953ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m  Load.loadUnit(file:/home/yald/Documents/Training/Tutorial/spark_streaming/, ...) took 13904.426182ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: load took 13907.625545ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: resolveProjects took 0.166577ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: finalTransforms took 46.712ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: config.delegates took 0.418499ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: Def.make(settings)... took 178.972063ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: structureIndex took 121.412174ms[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: mkStreams took 0.003203ms[0m[0J
[0m[[0m[0minfo[0m] [0m[0mset current project to spark_streaming (in build file:/home/yald/Documents/Training/Tutorial/spark_streaming/)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtPopOnFailure, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(notifyUsersAboutShell, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(iflast shell, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(; set ideaPort in Global := 34207 ; idea-shell, None, None)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(set ideaPort in Global := 34207, None, None)[0m[0J
[0m[[0m[0minfo[0m] [0m[0mDefining Global / ideaPort[0m[0J
[0m[[0m[0minfo[0m] [0m[0mThe new value will be used by Compile / compile, Test / compile[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mDefining [0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	Global / ideaPort[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mThe new value will be used by [0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	Compile / compile[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	Test / compile[0m[0J
[0m[[0m[0minfo[0m] [0m[0mReapplying settings...[0m[0J
[0m[[0m[0minfo[0m] [0m[0mset current project to spark_streaming (in build file:/home/yald/Documents/Training/Tutorial/spark_streaming/)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m[0J
